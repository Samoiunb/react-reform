webpackJsonp([7],{143:function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function r(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var u=function(){function e(e,t){for(var n=0;n<t.length;n++){var l=t[n];l.enumerable=l.enumerable||!1,l.configurable=!0,"value"in l&&(l.writable=!0),Object.defineProperty(e,l.key,l)}}return function(t,n,l){return n&&e(t.prototype,n),l&&e(t,l),t}}(),i=n(2),c=l(i),m=n(20),d=function(e){function t(){return o(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return r(t,e),u(t,[{key:"render",value:function(){return c.default.createElement(m.Scaffold,null,c.default.createElement(m.H1,{mb5:!0},"ReformContext"),c.default.createElement(m.Section,null,c.default.createElement(m.P,null,"Your forms need to know which themes and validations are available within your app. ReformContext uses React's ",c.default.createElement(m.Link,{href:"https://facebook.github.io/react/docs/context.html"},"context")," feature to propage this information."),c.default.createElement(m.P,null,"For this to work, you need to put the ",c.default.createElement(m.Code.Inline,null,"ReformContext")," component at the root of your app."),c.default.createElement(m.P,null,"Have a look here for how to use it:"),c.default.createElement(m.Code,null,"\n            import React, {Component} from 'react'\n            import {render} from 'react-dom'\n            import {ReformContext, createTheme} from 'react-reform'\n            import defaultValidations from 'react-reform/opt/validations'\n\n            const defaultTheme = createTheme(...)\n            const darkTheme = createTheme(...)\n            const singleInputTheme = createTheme(...)\n\n            const themes = {\n              default: defaultTheme,\n              dark: darkTheme,\n              singleInput: singleInputTheme\n            };\n\n            const validations = {\n              ...defaultValidations,\n              validTag: {...}\n            }\n\n            class App extends Component {\n\n              render() {\n                return (\n                  <ReformContext themes={themes} validations={validations}>\n                    <div>\n                      ...Your App Code...\n                    </div>\n                  </ReformContext>\n                )\n              }\n            }\n\n            render(<App/>, document.getElementById('root'))\n          ")),c.default.createElement(m.Section,null,c.default.createElement(m.H2,null,c.default.createElement(m.Code.Inline,null,"themes")," prop"),c.default.createElement(m.P,null,"The ",c.default.createElement(m.Code.Inline,null,"themes")," prop expect an object mapping keys to ",c.default.createElement(m.Link,{to:"/docs/themes/"},"themes"),"."),c.default.createElement(m.P,null,"The key names allow to set a form's theme like this:"),c.default.createElement(m.Code,null,'\n            <Form theme="singleInput" onSubmit={this.handleSubmit}>\n              ...\n            </Form>\n          '),c.default.createElement(m.P,null,"If a form sets no explicit theme, the ",c.default.createElement(m.Code.Inline,null,"default")," theme will be chosen.")),c.default.createElement(m.Section,null,c.default.createElement(m.H2,null,c.default.createElement(m.Code.Inline,null,"validations")," prop"),c.default.createElement(m.P,null,"To setup ",c.default.createElement(m.Link,{to:"/docs/validations/"},"validations"),", use the ",c.default.createElement(m.Code.Inline,null,"validations")," prop. Pass an object that maps validation names to an validation object."),c.default.createElement(m.P,null,"This validation names can then be used by inputs by prefixing ",c.default.createElement(m.Code.Inline,null,"is")," or ",c.default.createElement(m.Code.Inline,null,"has"),":"),c.default.createElement(m.Code,null,'\n            <Form onSubmit={this.handleSubmit}>\n              <Text name="tag" isRequired isValidTag hasMinlength={3}/>\n            </Form>\n          ')))}}]),t}(c.default.Component);t.default=d}});
//# sourceMappingURL=7-561bd.chunk.js.map