{"version":3,"sources":["webpack:///10-1087e.chunk.js","webpack:///./src/pages/GettingStarted.js"],"names":["webpackJsonp","139","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_react","_react2","_layouts","GettingStarted","_React$Component","this","getPrototypeOf","apply","arguments","createElement","Scaffold","H1","mb1","SubH1","Section","H2","mb3","P","Code","Inline","Component"],"mappings":"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","file":"10-1087e.chunk.js","sourcesContent":["webpackJsonp([10],{\n\n/***/ 139:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _layouts = __webpack_require__(20);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar GettingStarted = function (_React$Component) {\n\t  _inherits(GettingStarted, _React$Component);\n\t\n\t  function GettingStarted() {\n\t    _classCallCheck(this, GettingStarted);\n\t\n\t    return _possibleConstructorReturn(this, (GettingStarted.__proto__ || Object.getPrototypeOf(GettingStarted)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(GettingStarted, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        _layouts.Scaffold,\n\t        null,\n\t        _react2.default.createElement(\n\t          _layouts.H1,\n\t          { mb1: true },\n\t          'Getting Started'\n\t        ),\n\t        _react2.default.createElement(\n\t          _layouts.SubH1,\n\t          null,\n\t          'Learn about the essential pieces of React Reform'\n\t        ),\n\t        _react2.default.createElement(\n\t          _layouts.Section,\n\t          null,\n\t          _react2.default.createElement(\n\t            _layouts.H2,\n\t            { mb3: true },\n\t            'Install'\n\t          ),\n\t          _react2.default.createElement(\n\t            _layouts.P,\n\t            null,\n\t            'Add React Reform to your application via'\n\t          ),\n\t          _react2.default.createElement(\n\t            _layouts.Code,\n\t            null,\n\t            'npm install react-reform'\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _layouts.Section,\n\t          null,\n\t          _react2.default.createElement(\n\t            _layouts.H2,\n\t            { mb3: true },\n\t            'Create your first theme'\n\t          ),\n\t          _react2.default.createElement(\n\t            _layouts.P,\n\t            null,\n\t            'Use the ',\n\t            _react2.default.createElement(\n\t              _layouts.Code.Inline,\n\t              null,\n\t              'createTheme'\n\t            ),\n\t            ' method and define how your form body and each field should be rendered'\n\t          ),\n\t          _react2.default.createElement(\n\t            _layouts.Code,\n\t            null,\n\t            '\\n            import {createTheme} from \\'react-reform\\'\\n\\n            const defautTheme = createTheme({\\n\\n              renderForm: (FormContainer, children, {directProps, isValid}) => (\\n                <FormContainer\\n                  style={{background: isValid ? \\'green\\' : \\'red\\', ...directProps.style}}\\n                >\\n                  <div>{children}</div>\\n                  <button>{directProps.buttonLabel || \\'Submit\\'}</button>\\n                </FormContainer>\\n              ),\\n\\n              renderField: (Field, {directProps, name, isFocused, validations, id}) => {\\n                const errors = validations\\n                  .filter(({isValid}) => isValid === false)\\n                  .map(({errorMessage, name}) => <span key={name}>{errorMessage}, </span>)\\n                return (\\n                  <div>\\n                    <label htmlFor={id}>\\n                      {directProps.label || name}\\n                      {!isFocused && errors}\\n                    </label>\\n                    <Field id={id}\\n                      style={{background: isFocused ? \\'lightgreen\\' : \\'yellow\\'}}\\n                      {...directProps}\\n                    />\\n                  </div>\\n                )\\n\\n            })\\n          '\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _layouts.Section,\n\t          null,\n\t          _react2.default.createElement(\n\t            _layouts.H2,\n\t            { mb3: true },\n\t            'Create custom validations'\n\t          ),\n\t          _react2.default.createElement(\n\t            _layouts.P,\n\t            null,\n\t            'Let\\'s add a ',\n\t            _react2.default.createElement(\n\t              _layouts.Code.Inline,\n\t              null,\n\t              'validTag'\n\t            ),\n\t            ' validation to the default validations like e.g. ',\n\t            _react2.default.createElement(\n\t              _layouts.Code.Inline,\n\t              null,\n\t              'required'\n\t            ),\n\t            ' or ',\n\t            _react2.default.createElement(\n\t              _layouts.Code.Inline,\n\t              null,\n\t              'maxlength'\n\t            ),\n\t            '.'\n\t          ),\n\t          _react2.default.createElement(\n\t            _layouts.Code,\n\t            null,\n\t            '\\n            import defaultValidations from \\'react-reform/opt/validations\\'\\n\\n            const validations = {\\n              ...defaultValidations,\\n\\n              validTag: {\\n                isValid: val => /#\\\\W+/.test(val),\\n                errorMessage: val => `\\'${val}\\' is not a valid tag!`\\n              }\\n            }\\n\\n          '\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _layouts.Section,\n\t          null,\n\t          _react2.default.createElement(\n\t            _layouts.H2,\n\t            { mb3: true },\n\t            'Make your app aware of your themes and validations'\n\t          ),\n\t          _react2.default.createElement(\n\t            _layouts.P,\n\t            null,\n\t            'React Reform uses react\\'s context to propagate what themes and validations you have enabled for your app.'\n\t          ),\n\t          _react2.default.createElement(\n\t            _layouts.P,\n\t            null,\n\t            'Therefore you need to wrap your root component with the ',\n\t            _react2.default.createElement(\n\t              _layouts.Code.Inline,\n\t              null,\n\t              '<ReformContext>'\n\t            ),\n\t            ' Component like so.'\n\t          ),\n\t          _react2.default.createElement(\n\t            _layouts.Code,\n\t            null,\n\t            '\\n            import React, {Component} from \\'react\\'\\n            import {render} from \\'react-dom\\'\\n            import {ReformContext} from \\'react-reform\\'\\n\\n            const themes = {default: defaultTheme};\\n\\n            class App extends Component {\\n\\n              render() {\\n                return (\\n                  <ReformContext themes={themes} validations={validations}>\\n                    <div>\\n                      ...Your App Code...\\n                    </div>\\n                  </ReformContext>\\n                )\\n              }\\n            }\\n\\n            render(<App/>, document.getElementById(\\'root\\'))\\n          '\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _layouts.Section,\n\t          null,\n\t          _react2.default.createElement(\n\t            _layouts.H2,\n\t            { mb3: true },\n\t            'Let\\'s write our first form'\n\t          ),\n\t          _react2.default.createElement(\n\t            _layouts.P,\n\t            null,\n\t            'Now that the basics are set up, enjoy writing your forms with very little boilerplate!'\n\t          ),\n\t          _react2.default.createElement(\n\t            _layouts.Code,\n\t            null,\n\t            '\\n            import React, {Component} from \\'react\\'\\n            import {Form} from \\'react-reform\\'\\n            import {Text, Textarea} from \\'react-reform/opt/inputs\\'\\n\\n            class TagForm extends Component {\\n\\n              handleSubmit = ({tag, description}, e) => {\\n                ...\\n              }\\n\\n              render() {\\n                return (\\n                  <div>\\n                    <h2>Enter your tag information here</h2>\\n                    <Form onSubmit={this.handleSubmit}>\\n                      <Text name=\"tag\" isRequired isValidTag/>\\n                      <Textarea name=\"description\" label=\"Enter description\"/>\\n                    </Form>\\n                  </div>\\n                )\\n              }\\n            }\\n          '\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return GettingStarted;\n\t}(_react2.default.Component);\n\t\n\texports.default = GettingStarted;\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// 10-1087e.chunk.js","import React from 'react'\nimport {Scaffold, H1, H2, SubH1, Code, P, Section} from 'comps/layouts'\n\nexport default class GettingStarted extends React.Component {\n\n  render() {\n    return (\n      <Scaffold>\n        <H1 mb1>Getting Started</H1>\n        <SubH1>Learn about the essential pieces of React Reform</SubH1>\n        <Section>\n          <H2 mb3>Install</H2>\n          <P>Add React Reform to your application via</P>\n          <Code>npm install react-reform</Code>\n        </Section>\n        <Section>\n          <H2 mb3>Create your first theme</H2>\n          <P>Use the <Code.Inline>createTheme</Code.Inline> method and define how your form body and each field should be rendered</P>\n          <Code>{`\n            import {createTheme} from 'react-reform'\n\n            const defautTheme = createTheme({\n\n              renderForm: (FormContainer, children, {directProps, isValid}) => (\n                <FormContainer\n                  style={{background: isValid ? 'green' : 'red', ...directProps.style}}\n                >\n                  <div>{children}</div>\n                  <button>{directProps.buttonLabel || 'Submit'}</button>\n                </FormContainer>\n              ),\n\n              renderField: (Field, {directProps, name, isFocused, validations, id}) => {\n                const errors = validations\n                  .filter(({isValid}) => isValid === false)\n                  .map(({errorMessage, name}) => <span key={name}>{errorMessage}, </span>)\n                return (\n                  <div>\n                    <label htmlFor={id}>\n                      {directProps.label || name}\n                      {!isFocused && errors}\n                    </label>\n                    <Field id={id}\n                      style={{background: isFocused ? 'lightgreen' : 'yellow'}}\n                      {...directProps}\n                    />\n                  </div>\n                )\n\n            })\n          `}</Code>\n        </Section>\n        <Section>\n          <H2 mb3>Create custom validations</H2>\n          <P>Let's add a <Code.Inline>validTag</Code.Inline> validation to the default validations like e.g. <Code.Inline>required</Code.Inline> or <Code.Inline>maxlength</Code.Inline>.</P>\n          <Code>{`\n            import defaultValidations from 'react-reform/opt/validations'\n\n            const validations = {\n              ...defaultValidations,\n\n              validTag: {\n                isValid: val => /#\\\\W+/.test(val),\n                errorMessage: val => \\`'\\${val}' is not a valid tag!\\`\n              }\n            }\n\n          `}</Code>\n        </Section>\n        <Section>\n          <H2 mb3>Make your app aware of your themes and validations</H2>\n          <P>React Reform uses react's context to propagate what themes and validations you have enabled for your app.</P>\n          <P>Therefore you need to wrap your root component with the <Code.Inline>{'<ReformContext>'}</Code.Inline> Component like so.</P>\n          <Code>{`\n            import React, {Component} from 'react'\n            import {render} from 'react-dom'\n            import {ReformContext} from 'react-reform'\n\n            const themes = {default: defaultTheme};\n\n            class App extends Component {\n\n              render() {\n                return (\n                  <ReformContext themes={themes} validations={validations}>\n                    <div>\n                      ...Your App Code...\n                    </div>\n                  </ReformContext>\n                )\n              }\n            }\n\n            render(<App/>, document.getElementById('root'))\n          `}</Code>\n        </Section>\n\n        <Section>\n          <H2 mb3>Let's write our first form</H2>\n          <P>Now that the basics are set up, enjoy writing your forms with very little boilerplate!</P>\n          <Code>{`\n            import React, {Component} from 'react'\n            import {Form} from 'react-reform'\n            import {Text, Textarea} from 'react-reform/opt/inputs'\n\n            class TagForm extends Component {\n\n              handleSubmit = ({tag, description}, e) => {\n                ...\n              }\n\n              render() {\n                return (\n                  <div>\n                    <h2>Enter your tag information here</h2>\n                    <Form onSubmit={this.handleSubmit}>\n                      <Text name=\"tag\" isRequired isValidTag/>\n                      <Textarea name=\"description\" label=\"Enter description\"/>\n                    </Form>\n                  </div>\n                )\n              }\n            }\n          `}</Code>\n        </Section>\n      </Scaffold>\n    )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/GettingStarted.js"],"sourceRoot":""}